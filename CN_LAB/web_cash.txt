#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<unistd.h>
#include<arpa/inet.h>
/*int fun(char buf[])
{
     int len=strlen(buf);
     int i=0;

     char op,n1[30],n2[30];
     int j=0;
     for(i=0; i<len; i++)
     {
             if(buf[i]=='+' || buf[i]=='-' || buf[i]=='/' || buf[i]=='*')
             {
                 j=i;
                 op=buf[i];
                 break;
             }
     }

     for(i=0; i<j; i++)
             n1[i]=buf[i];

     buf[i]='\0';
     i=0;
     for(int a=j+1; a<len; a++)
       n2[i++]=buf[a];


     switch(op)
     {
              case '+' :
                  return atoi(n1) + atoi(n2);
              case '-':
                  return atoi(n1) - atoi(n2);
              case '*':
                  return atoi(n1) - atoi(n2);
                 case '/':
                  return atoi(n1) / atoi(n2);
     }
}

  */
int main()
{

     char *ip="127.0.0.1";
     int port=1200;

     int server_sock,client_sock;
     struct sockaddr_in server_addr,client_addr;
     socklen_t addr_size;
     char buffer[35024];
     int n;

     server_sock=socket(AF_INET,SOCK_STREAM,0);

     if(server_sock < 0)
     {
              perror("socket error\n");
              exit(1);
     }
  printf("socket created\n");
     memset(&server_addr,'\0',sizeof(server_addr));
     server_addr.sin_family=AF_INET;
     server_addr.sin_port=port;
     server_addr.sin_addr.s_addr=inet_addr(ip);

     n=bind(server_sock,(struct sockaddr*) &server_addr,sizeof(server_addr));

        if(n<0)
        {
          perror("bind error\n");
           exit(1);
        }
      listen(server_sock,1);
      printf("listening on %d port\n",port);
        while(1)
        {
            addr_size=sizeof(client_addr);
            client_sock=accept(server_sock,(struct sockaddr*)&client_addr,&addr_size);
            printf("connected to client\n");

            bzero(buffer,35024);
            recv(client_sock,buffer,sizeof(buffer),0);
           /* printf("Client : %s\n",buffer);

             int num=fun(buffer),n=num,c=0;

            bzero(buffer,1024);
            while(num)
            {
                    num/=10;
                    c++;
            }
            num=n;

            int i=c-1;
            for(i=c-1; i>=0; i--)
            {
                    buffer[i]=(char) (num%10 +'0');
                    num/=10;
            }*/
            FILE *fp;
            int i=0;
            char c;
            fp=fopen(buffer,"r");
            bzero(buffer,35024);
            /*while(c=fgetc(fp)!=EOF){
             buffer[i++]=c;
            }
            buffer[i]='\0';*/
            char buffer2[30000];
            bzero(bu
            while(fscanf(fp,"%99s",buffer)==1)
            {

            fclose(fp);
            send(client_sock,buffer,sizeof(buffer),0);
        }

     return 0;
}



[s2021103049@centos8-linux Tue Nov 14 05:31 PM w4]$ cd ../w3
[s2021103049@centos8-linux Tue Nov 14 05:31 PM w3]$ ls
add         add_serv.cpp  cli    client.c  med          sam.cpp  server.c  sub           test2    udp_cli.c
add_serv.c  a.out         cli.c  ftpc.c    mediate.cpp  ser      stud.txt  sub_serv.cpp  udp_c.c  udp_s.c
[s2021103049@centos8-linux Tue Nov 14 05:31 PM w3]$ cat ftpc.c
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<unistd.h>
#include<arpa/inet.h>


int main()
{

     char *ip="127.0.0.1";
     int port=1200;

     int sock;
     struct sockaddr_in addr;
     socklen_t addr_size;
     char buffer[35024];
     int n;

     sock=socket(AF_INET,SOCK_STREAM,0);

     if(sock < 0)
     {
              perror("socket error\n");
              exit(1);
     }
     printf("socket created\n");
     memset(&addr,'\0',sizeof(addr));
     addr.sin_family=AF_INET;
     addr.sin_port=port;
     addr.sin_addr.s_addr=inet_addr(ip);



            addr_size=sizeof(addr);
            connect(sock,(struct sockaddr*) &addr,sizeof(addr));
            char file[30];
            bzero(buffer,35024);
            printf("enetr file name:");
            scanf("%s",buffer);
            strcpy(file,buffer);
            send(sock,buffer,sizeof(buffer),0);
            bzero(buffer,35024);
            recv(sock,buffer,sizeof(buffer),0);
            FILE *fp;
            fp=fopen(file,"w");
            fprintf(fp,"%s",buffer);
            fclose(fp);
            printf("Serrver : %s\n",buffer);


       return 0;
}

[s2021103049@centos8-linux Tue Nov 14 05:31 PM w3]$